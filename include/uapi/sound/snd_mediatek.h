/* SPDX-License-Identifier: ((GPL-2.0 WITH Linux-syscall-note) OR BSD-3-Clause) */
/*
 * Copyright (c) 2020 MediaTek Inc.
 */
#ifndef	__LINUX_SND_MEDIATEK_H
#define	__LINUX_SND_MEDIATEK_H

#define	SND_MTK_UAPI_VER	0x000E

/* kcontrol */
#define	K_DSP_GET_MAIN_COUNTER			"DSP Main Counter"
#define	K_DSP_GET_ISR_COUNTER			"DSP Isr Counter"
#define	K_DSP_SET_SW_RESET			"DSP SW Reset"
#define	K_DSP_SET_RELOAD			"DSP Reload"
#define	K_SPEAKER_SET_INJECT_SINETONE		"Inject Speaker Sinetone"
#define	K_AMP_SET_MUTE				"AMP Mute"
#define	K_AMP_PARAMETER_ARRAY			"AMP PARAMETER ARRAY"
#define	K_SRC1_RATE				"SRC1 RATE"
#define	K_SRC1_GET_PB_BUF_LEVEL			"SRC1 GET PB BUF LEVEL"
#define	K_SRC1_GET_CAP_BUF_LEVEL		"SRC1 GET CAP BUF LEVEL"
#define	K_SRC2_RATE				"SRC2 RATE"
#define	K_SRC2_GET_PB_BUF_LEVEL			"SRC2 GET PB BUF LEVEL"
#define	K_SRC2_GET_CAP_BUF_LEVEL		"SRC2 GET CAP BUF LEVEL"
#define	K_SRC3_RATE				"SRC3 RATE"
#define	K_SRC3_GET_PB_BUF_LEVEL			"SRC3 GET PB BUF LEVEL"
#define	K_SRC3_GET_CAP_BUF_LEVEL		"SRC3 GET CAP BUF LEVEL"
#define	K_HDMI1_INPUT_GET_MUTE_EVENT		"HDMI-RX1 MUTE EVENT"
#define	K_HDMI1_INPUT_GET_NONPCM_EVENT		"HDMI-RX1 NONPCM EVENT"
#define	K_HDMI1_INPUT_SET_NONPCM_FLAG		"HDMI-RX1 NONPCM FLAG"
#define	K_HDMI1_INPUT_SET_FASTLOCK_MODE		"HDMI-RX1 FASTLOCK MODE"
#define	K_HDMI1_INPUT_GET_TIMESTAMP		"HDMI-RX1 TIMESTAMP"
#define	K_HDMI2_INPUT_GET_MUTE_EVENT		"HDMI-RX2 MUTE EVENT"
#define	K_HDMI2_INPUT_GET_NONPCM_EVENT		"HDMI-RX2 NONPCM EVENT"
#define	K_HDMI2_INPUT_SET_NONPCM_FLAG		"HDMI-RX2 NONPCM FLAG"
#define	K_HDMI2_INPUT_SET_FASTLOCK_MODE		"HDMI-RX2 FASTLOCK MODE"
#define	K_HDMI2_INPUT_GET_TIMESTAMP		"HDMI-RX2 TIMESTAMP"
#define	K_SPDIF_SET_CHANNEL_STATUS		"SPDIF PLAYBACK CHANNEL STATUS"
#define	K_SPDIF_SET_NONPCM_CHANNEL_STATUS	"SPDIF NONPCM PLAYBACK CHANNEL STATUS"
#define	K_ARC_SET_CHANNEL_STATUS		"ARC PLAYBACK CHANNEL STATUS"
#define	K_ARC_SET_NONPCM_CHANNEL_STATUS		"ARC NONPCM PLAYBACK CHANNEL STATUS"
#define	K_EARC_SET_CHANNEL_STATUS		"EARC PLAYBACK CHANNEL STATUS"
#define	K_EARC_SET_NONPCM_CHANNEL_STATUS	"EARC NONPCM PLAYBACK CHANNEL STATUS"
#define	K_EARC_SET_INFOFRAME			"EARC INFOFRAME"
#define	K_EARC_SET_ACP				"EARC ACP"
#define	K_EARC_SET_ISRC1			"EARC ISRC1"
#define	K_EARC_SET_ISRC2			"EARC ISRC2"
#define	K_EARC_SET_SLT_SINE_GEN			"EARC PLAYBACK SLT SINEGEN TX"
#define	K_ATV_HIDEV				"ATV HIDEV"
#define	K_ATV_PRESCALE				"ATV PRESCALE"
#define	K_ATV_THRESHOLD				"ATV THRESHOLD"
#define	K_ATV_CARRIER_STATUS			"ATV CARRIER STATUS"
#define	K_ATV_STANDARD				"ATV STANDARD"
#define	K_ATV_SOUNDMODE				"ATV SOUNDMODE"
#define	K_ATV_AUTO_DET_STD_RESULT		"ATV AUTO DET STD RESULT"
#define	K_ATV_SYS_CAPABILITY			"ATV SYS CAPABILITY"
#define	K_ATV_PAL_SC1_AMP			"ATV PAL SC1 AMP"
#define	K_ATV_PAL_SC1_NSR			"ATV PAL SC1 NSR"
#define	K_ATV_PAL_SC2_AMP			"ATV PAL SC2 AMP"
#define	K_ATV_PAL_SC2_NSR			"ATV PAL SC2 NSR"
#define	K_ATV_PAL_PILOT_AMP			"ATV PAL PILOT AMP"
#define	K_ATV_PAL_PILOT_PHASE			"ATV PAL PILOT PHASE"
#define	K_ATV_PAL_STEREO_DUAL_ID		"ATV PAL STEREO DUAL ID"
#define	K_ATV_PAL_NICAM_PHASE_ERR		"ATV PAL NICAM PHASE ERR"
#define	K_ATV_PAL_BAND_STRENGTH			"ATV PAL BAND STRENGTH"
#define	K_ATV_BTSC_SC1_AMP			"ATV BTSC SC1 AMP"
#define	K_ATV_BTSC_SC1_NSR			"ATV BTSC SC1 NSR"
#define	K_ATV_BTSC_PILOT_AMP			"ATV BTSC PILOT AMP"
#define	K_ATV_BTSC_SAP_AMP			"ATV BTSC SAP AMP"
#define	K_ATV_BTSC_SAP_NSR			"ATV BTSC SAP NSR"
#define	K_ATV_GET_TIMESTAMP			"ATV TIMESTAMP"
#define	K_ADC_GET_TIMESTAMP			"ADC TIMESTAMP"
#define	K_ADC1_GET_TIMESTAMP			"ADC1 TIMESTAMP"

/* card name */
#define	M_TVSOC				"mtkdtvsndcard"

/* device name */
#define	D_SPEAKER			"Speaker Playback"
#define	D_SRC1				"SRC1"
#define	D_SRC2				"SRC2"
#define	D_SRC3				"SRC3"
#define	D_SPDIF_OUTPUT			"SPDIF-TX Playback"
#define	D_SPDIF_NONPCM_OUTPUT		"SPDIF-TX NONPCM Playback"
#define	D_ARC_OUTPUT			"ARC Playback"
#define	D_ARC_NONPCM_OUTPUT		"ARC NONPCM Playback"
#define	D_EARC_OUTPUT			"EARC Playback"
#define	D_EARC_NONPCM_OUTPUT		"EARC NONPCM Playback"
#define	D_HDMI1_INPUT			"HDMI-RX1 Capture"
#define	D_HDMI2_INPUT			"HDMI-RX2 Capture"
#define	D_ATV				"ATV Capture"
#define	D_ADC				"ADC Capture"
#define	D_ADC1				"ADC1 Capture"
#define	D_HEADPHONE			"Headphone Playback"
#define	D_LINEOUT			"Lineout Playback"
#define	D_I2S_RX2			"I2S-RX2 Capture"
#define	D_LOOPBACK			"LOOPBACK Capture"
#define	D_HFP_RX			"Hand-Free Profile Capture"
#define	D_HFP_TX			"Hand-Free Profile Playback"

enum src_kcontrol_cmd {
	SRC1_RATE,
	SRC1_PB_BUF_LEVEL,	// unit: bytes
	SRC1_CAP_BUF_LEVEL,	// unit: bytes

	SRC2_RATE,
	SRC2_PB_BUF_LEVEL,	// unit: bytes
	SRC2_CAP_BUF_LEVEL,	// unit: bytes

	SRC3_RATE,
	SRC3_PB_BUF_LEVEL,	// unit: bytes
	SRC3_CAP_BUF_LEVEL,	// unit: bytes
};

enum atv_decode_system {
	ATV_SYS_PALSUM,
	ATV_SYS_BTSC,
	ATV_SYS_NUM,
};

enum atv_sub_std {
	ATV_SUB_STD_MONO,
	ATV_SUB_STD_HIDEV,
	ATV_SUB_STD_A2,
	ATV_SUB_STD_NICAM,
	ATV_SUB_STD_INVALID		= 0xFF,
};

enum atv_standard_type {
	ATV_STD_NOT_READY		= 0x0,
	ATV_STD_M_BTSC			= 0x1,
	ATV_STD_M_EIAJ			= 0x2,
	ATV_STD_M_A2			= 0x3,
	ATV_STD_BG_A2			= 0x4,
	ATV_STD_DK1_A2			= 0x5,
	ATV_STD_DK2_A2			= 0x6,
	ATV_STD_DK3_A2			= 0x7,
	ATV_STD_BG_NICAM		= 0x8,
	ATV_STD_DK_NICAM		= 0x9,
	ATV_STD_I_NICAM			= 0xA,
	ATV_STD_L_NICAM			= 0xB,
	ATV_STD_FM_RADIO		= 0xC,
	ATV_STD_BUSY			= 0x80,
	ATV_STD_SEL_AUTO		= 0xE0,
	ATV_STD_MAX,
};

enum {
	ATV_MAIN_STANDARD,
	ATV_SUB_STANDARD,
};

enum atv_carrier_status {
	ATV_NO_CARRIER			= 0x00,	///< No carrier detect
	ATV_PRIMARY_CARRIER		= 0x01,	///< Carrier 1 exist
	ATV_SECONDARY_CARRIER		= 0x02,	///< Carrier 2 exist
	ATV_NICAM			= 0x04,	///< Nicam lock state
	ATV_STEREO			= 0x08,	///< A2 Stereo exist
	ATV_BILINGUAL			= 0x10,	///< A2 Dual exist
	ATV_PILOT			= 0x20,	///< A2 Pilot exist
	ATV_DK2				= 0x40,	///< Sound standard is DK2
	ATV_DK3				= 0x80	///< Sound standard is DK3
};

enum atv_sound_mode_detect {
	ATV_SOUND_MODE_DET_UNKNOWN,		///< unknown
	ATV_SOUND_MODE_DET_MONO,		///< MTS/A2/EIAJ/FM-Mono mono
	ATV_SOUND_MODE_DET_STEREO,		///< MTS/A2/EIAJ stereo
	ATV_SOUND_MODE_DET_MONO_SAP,		///< MTS mono + SAP
	ATV_SOUND_MODE_DET_STEREO_SAP,		///< MTS stereo + SAP
	ATV_SOUND_MODE_DET_DUAL,		///< A2/EIAJ dual 1
	ATV_SOUND_MODE_DET_NICAM_MONO,		///< NICAM mono (with FM/AM mono)
	ATV_SOUND_MODE_DET_NICAM_STEREO,	///< NICAM stereo (with FM/AM mono)
	ATV_SOUND_MODE_DET_NICAM_DUAL,		///< NICAM dual (with FM/AM mono)
};

enum atv_sound_mode {
	ATV_SOUND_MODE_UNKNOWN,			///< unknown
	ATV_SOUND_MODE_MONO,			///< MTS/A2/EIAJ/FM-Mono mono
	ATV_SOUND_MODE_STEREO,			///< MTS/A2/EIAJ stereo
	ATV_SOUND_MODE_SAP,			///< MTS SAP
	ATV_SOUND_MODE_A2_LANG_A,		///< A2/EIAJ dual A
	ATV_SOUND_MODE_A2_LANG_B,		///< A2/EIAJ dual B
	ATV_SOUND_MODE_A2_LANG_AB,		///< A2/EIAJ L:dual A, R:dual B
	ATV_SOUND_MODE_NICAM_MONO,		///< NICAM mono
	ATV_SOUND_MODE_NICAM_STEREO,		///< NICAM stereo
	ATV_SOUND_MODE_NICAM_DUAL_A,		///< NICAM L:dual A, R:dual A
	ATV_SOUND_MODE_NICAM_DUAL_B,		///< NICAM L:dual B, R:dual B
	ATV_SOUND_MODE_NICAM_DUAL_AB,		///< NICAM L:dual A, R:dual B
	ATV_SOUND_MODE_AUTO		= 0x80,	///< auto sound mode
};

enum atv_comm_cmd {
	ATV_SET_START,
	ATV_SET_STOP,
	ATV_ENABLE_HIDEV,
	ATV_SET_HIDEV_BW,
	ATV_ENABLE_AGC,
	ATV_RESET_AGC,
	ATV_ENABLE_FC_TRACKING,
	ATV_RESET_FC_TRACKING,

	// Palsum audio signal level
	ATV_PAL_GET_SC1_AMP,
	ATV_PAL_GET_SC1_NSR,
	ATV_PAL_GET_SC2_AMP,
	ATV_PAL_GET_SC2_NSR,
	ATV_PAL_GET_PILOT_AMP,
	ATV_PAL_GET_PILOT_PHASE,
	ATV_PAL_GET_STEREO_DUAL_ID,
	ATV_PAL_GET_NICAM_PHASE_ERR,
	ATV_PAL_GET_BAND_STRENGTH,

	// Btsc audio signal level
	ATV_BTSC_GET_SC1_AMP,
	ATV_BTSC_GET_SC1_NSR,
	ATV_BTSC_GET_STEREO_PILOT_AMP,
	ATV_BTSC_GET_SAP_AMP,
	ATV_BTSC_GET_SAP_NSR,

	ATV_COMM_CMD_NUM,
};

enum atv_gain_type {
	ATV_PAL_GAIN_A2_FM_M,
	ATV_PAL_GAIN_HIDEV_M,
	ATV_PAL_GAIN_A2_FM_X,
	ATV_PAL_GAIN_HIDEV_X,
	ATV_PAL_GAIN_NICAM,
	ATV_PAL_GAIN_AM,

	ATV_BTSC_GAIN_TOTAL,
	ATV_BTSC_GAIN_MONO,
	ATV_BTSC_GAIN_STEREO,
	ATV_BTSC_GAIN_SAP,
	ATV_GAIN_TYPE_NUM,
};

enum atv_hidev_mode {
	ATV_HIDEV_OFF,
	ATV_HIDEV_L1,
	ATV_HIDEV_L2,
	ATV_HIDEV_L3,
	ATV_HIDEV_NUM,
};

enum atv_hidev_filter_bw {
	ATV_HIDEV_BW_DEFAULT	= 0x00,
	ATV_HIDEV_BW_L1		= 0x10,
	ATV_HIDEV_BW_L2		= 0x20,
	ATV_HIDEV_BW_L3		= 0x30,
};

enum atv_thr_type {
	A2_M_CARRIER1_ON_AMP,
	A2_M_CARRIER1_OFF_AMP,
	A2_M_CARRIER1_ON_NSR,
	A2_M_CARRIER1_OFF_NSR,
	A2_M_CARRIER2_ON_AMP,
	A2_M_CARRIER2_OFF_AMP,
	A2_M_CARRIER2_ON_NSR,
	A2_M_CARRIER2_OFF_NSR,
	A2_M_A2_PILOT_ON_AMP,
	A2_M_A2_PILOT_OFF_AMP,
	A2_M_PILOT_PHASE_ON_THD,
	A2_M_PILOT_PHASE_OFF_THD,
	A2_M_POLIT_MODE_VALID_RATIO,
	A2_M_POLIT_MODE_INVALID_RATIO,
	A2_M_EXTENSION,

	A2_BG_CARRIER1_ON_AMP,
	A2_BG_CARRIER1_OFF_AMP,
	A2_BG_CARRIER1_ON_NSR,
	A2_BG_CARRIER1_OFF_NSR,
	A2_BG_CARRIER2_ON_AMP,
	A2_BG_CARRIER2_OFF_AMP,
	A2_BG_CARRIER2_ON_NSR,
	A2_BG_CARRIER2_OFF_NSR,
	A2_BG_A2_PILOT_ON_AMP,
	A2_BG_A2_PILOT_OFF_AMP,
	A2_BG_PILOT_PHASE_ON_THD,
	A2_BG_PILOT_PHASE_OFF_THD,
	A2_BG_POLIT_MODE_VALID_RATIO,
	A2_BG_POLIT_MODE_INVALID_RATIO,
	A2_BG_EXTENSION,

	A2_DK_CARRIER1_ON_AMP,
	A2_DK_CARRIER1_OFF_AMP,
	A2_DK_CARRIER1_ON_NSR,
	A2_DK_CARRIER1_OFF_NSR,
	A2_DK_CARRIER2_ON_AMP,
	A2_DK_CARRIER2_OFF_AMP,
	A2_DK_CARRIER2_ON_NSR,
	A2_DK_CARRIER2_OFF_NSR,
	A2_DK_A2_PILOT_ON_AMP,
	A2_DK_A2_PILOT_OFF_AMP,
	A2_DK_PILOT_PHASE_ON_THD,
	A2_DK_PILOT_PHASE_OFF_THD,
	A2_DK_POLIT_MODE_VALID_RATIO,
	A2_DK_POLIT_MODE_INVALID_RATIO,
	A2_DK_EXTENSION,

	FM_I_CARRIER1_ON_AMP,
	FM_I_CARRIER1_OFF_AMP,
	FM_I_CARRIER1_ON_NSR,
	FM_I_CARRIER1_OFF_NSR,

	AM_CARRIER1_ON_AMP,
	AM_CARRIER1_OFF_AMP,
	AM_EXTENSION,

	HIDEV_M_CARRIER1_ON_AMP,
	HIDEV_M_CARRIER1_OFF_AMP,
	HIDEV_M_CARRIER1_ON_NSR,
	HIDEV_M_CARRIER1_OFF_NSR,

	HIDEV_BG_CARRIER1_ON_AMP,
	HIDEV_BG_CARRIER1_OFF_AMP,
	HIDEV_BG_CARRIER1_ON_NSR,
	HIDEV_BG_CARRIER1_OFF_NSR,

	HIDEV_DK_CARRIER1_ON_AMP,
	HIDEV_DK_CARRIER1_OFF_AMP,
	HIDEV_DK_CARRIER1_ON_NSR,
	HIDEV_DK_CARRIER1_OFF_NSR,

	HIDEV_I_CARRIER1_ON_AMP,
	HIDEV_I_CARRIER1_OFF_AMP,
	HIDEV_I_CARRIER1_ON_NSR,
	HIDEV_I_CARRIER1_OFF_NSR,

	NICAM_BG_NICAM_ON_SIGERR,
	NICAM_BG_NICAM_OFF_SIGERR,
	NICAM_BG_EXTENSION,

	NICAM_I_NICAM_ON_SIGERR,
	NICAM_I_NICAM_OFF_SIGERR,
	NICAM_I_EXTENSION,

	PAL_THR_TYPE_END,

	BTSC_MONO_ON_NSR,
	BTSC_MONO_OFF_NSR,
	BTSC_PILOT_ON_AMPLITUDE,
	BTSC_PILOT_OFF_AMPLITUDE,
	BTSC_SAP_ON_NSR,
	BTSC_SAP_OFF_NSR,
	BTSC_STEREO_ON,
	BTSC_STEREO_OFF,
	BTSC_SAP_ON_AMPLITUDE,
	BTSC_SAP_OFF_AMPLITUDE,

	BTSC_THR_TYPE_END,
};

enum dsp_memory_type {
	DSP_MEM_TYPE_PM,
	DSP_MEM_TYPE_DM,
};

#endif /* __LINUX_SND_MEDIATEK_H */
